//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ControlAsistenciaEntities : DbContext
    {
        public ControlAsistenciaEntities()
            : base("name=ControlAsistenciaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int procAgregarAsistencia(Nullable<System.DateTime> fecha, Nullable<int> idTipo, Nullable<int> idCabeceraAsistencia)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var idCabeceraAsistenciaParameter = idCabeceraAsistencia.HasValue ?
                new ObjectParameter("idCabeceraAsistencia", idCabeceraAsistencia) :
                new ObjectParameter("idCabeceraAsistencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarAsistencia", fechaParameter, idTipoParameter, idCabeceraAsistenciaParameter);
        }
    
        public virtual int procAgregarBitocara(Nullable<int> idDocente, Nullable<int> idPeriodo, Nullable<System.DateTime> fecha, Nullable<int> idTipo, Nullable<int> idDistribucion, string observaciones)
        {
            var idDocenteParameter = idDocente.HasValue ?
                new ObjectParameter("idDocente", idDocente) :
                new ObjectParameter("idDocente", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarBitocara", idDocenteParameter, idPeriodoParameter, fechaParameter, idTipoParameter, idDistribucionParameter, observacionesParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> procagregarCabecera(Nullable<int> idCabecera, Nullable<int> idDetalleHorario, Nullable<System.DateTime> fecha, Nullable<bool> protegido)
        {
            var idCabeceraParameter = idCabecera.HasValue ?
                new ObjectParameter("idCabecera", idCabecera) :
                new ObjectParameter("idCabecera", typeof(int));
    
            var idDetalleHorarioParameter = idDetalleHorario.HasValue ?
                new ObjectParameter("idDetalleHorario", idDetalleHorario) :
                new ObjectParameter("idDetalleHorario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var protegidoParameter = protegido.HasValue ?
                new ObjectParameter("protegido", protegido) :
                new ObjectParameter("protegido", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("procagregarCabecera", idCabeceraParameter, idDetalleHorarioParameter, fechaParameter, protegidoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> procAgregarCabeceraAsistencia(Nullable<int> idEstudiante, Nullable<int> idCabecera, string observaciones)
        {
            var idEstudianteParameter = idEstudiante.HasValue ?
                new ObjectParameter("idEstudiante", idEstudiante) :
                new ObjectParameter("idEstudiante", typeof(int));
    
            var idCabeceraParameter = idCabecera.HasValue ?
                new ObjectParameter("idCabecera", idCabecera) :
                new ObjectParameter("idCabecera", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("procAgregarCabeceraAsistencia", idEstudianteParameter, idCabeceraParameter, observacionesParameter);
        }
    
        public virtual int procAgregarCalendarioAcademico(string detalle, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string backgroundColor, string borderColor, Nullable<int> idPeriodo)
        {
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var backgroundColorParameter = backgroundColor != null ?
                new ObjectParameter("backgroundColor", backgroundColor) :
                new ObjectParameter("backgroundColor", typeof(string));
    
            var borderColorParameter = borderColor != null ?
                new ObjectParameter("borderColor", borderColor) :
                new ObjectParameter("borderColor", typeof(string));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarCalendarioAcademico", detalleParameter, fechaInicioParameter, fechaFinParameter, backgroundColorParameter, borderColorParameter, idPeriodoParameter);
        }
    
        public virtual int procAgregarDetalleJustificacion(Nullable<int> idDetalleJustificacion, Nullable<int> idAsistencia, Nullable<int> idJustificacion, string observaciones)
        {
            var idDetalleJustificacionParameter = idDetalleJustificacion.HasValue ?
                new ObjectParameter("idDetalleJustificacion", idDetalleJustificacion) :
                new ObjectParameter("idDetalleJustificacion", typeof(int));
    
            var idAsistenciaParameter = idAsistencia.HasValue ?
                new ObjectParameter("idAsistencia", idAsistencia) :
                new ObjectParameter("idAsistencia", typeof(int));
    
            var idJustificacionParameter = idJustificacion.HasValue ?
                new ObjectParameter("idJustificacion", idJustificacion) :
                new ObjectParameter("idJustificacion", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarDetalleJustificacion", idDetalleJustificacionParameter, idAsistenciaParameter, idJustificacionParameter, observacionesParameter);
        }
    
        public virtual int procAgregarHorario(Nullable<int> idDetalleHorario, string detalle, string horaEntrada, string horaSalida, Nullable<int> idDistribucion, Nullable<int> idPeriodo, string backGroundColor, string borderColor)
        {
            var idDetalleHorarioParameter = idDetalleHorario.HasValue ?
                new ObjectParameter("idDetalleHorario", idDetalleHorario) :
                new ObjectParameter("idDetalleHorario", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var horaEntradaParameter = horaEntrada != null ?
                new ObjectParameter("horaEntrada", horaEntrada) :
                new ObjectParameter("horaEntrada", typeof(string));
    
            var horaSalidaParameter = horaSalida != null ?
                new ObjectParameter("horaSalida", horaSalida) :
                new ObjectParameter("horaSalida", typeof(string));
    
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var backGroundColorParameter = backGroundColor != null ?
                new ObjectParameter("backGroundColor", backGroundColor) :
                new ObjectParameter("backGroundColor", typeof(string));
    
            var borderColorParameter = borderColor != null ?
                new ObjectParameter("borderColor", borderColor) :
                new ObjectParameter("borderColor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarHorario", idDetalleHorarioParameter, detalleParameter, horaEntradaParameter, horaSalidaParameter, idDistribucionParameter, idPeriodoParameter, backGroundColorParameter, borderColorParameter);
        }
    
        public virtual int procAgregarJustificacion(Nullable<int> idTipoJustificacion, Nullable<int> cedula, string observacion, string url, Nullable<int> idAsistencia, Nullable<System.DateTime> fecha)
        {
            var idTipoJustificacionParameter = idTipoJustificacion.HasValue ?
                new ObjectParameter("idTipoJustificacion", idTipoJustificacion) :
                new ObjectParameter("idTipoJustificacion", typeof(int));
    
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var idAsistenciaParameter = idAsistencia.HasValue ?
                new ObjectParameter("idAsistencia", idAsistencia) :
                new ObjectParameter("idAsistencia", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarJustificacion", idTipoJustificacionParameter, cedulaParameter, observacionParameter, urlParameter, idAsistenciaParameter, fechaParameter);
        }
    
        public virtual int procAgregarOpciones(Nullable<int> idPeriodo, Nullable<int> nroSemanas)
        {
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var nroSemanasParameter = nroSemanas.HasValue ?
                new ObjectParameter("nroSemanas", nroSemanas) :
                new ObjectParameter("nroSemanas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarOpciones", idPeriodoParameter, nroSemanasParameter);
        }
    
        public virtual int procAgregarPermiso(Nullable<int> idPeriodo, Nullable<int> idDistribucion, Nullable<System.DateTime> fecha, Nullable<bool> estado)
        {
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarPermiso", idPeriodoParameter, idDistribucionParameter, fechaParameter, estadoParameter);
        }
    
        public virtual int procAgregarTiempo(Nullable<int> hora, Nullable<int> idDocente, Nullable<int> idPeriodo, Nullable<int> minutos, Nullable<int> segundos)
        {
            var horaParameter = hora.HasValue ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(int));
    
            var idDocenteParameter = idDocente.HasValue ?
                new ObjectParameter("idDocente", idDocente) :
                new ObjectParameter("idDocente", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var minutosParameter = minutos.HasValue ?
                new ObjectParameter("minutos", minutos) :
                new ObjectParameter("minutos", typeof(int));
    
            var segundosParameter = segundos.HasValue ?
                new ObjectParameter("segundos", segundos) :
                new ObjectParameter("segundos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarTiempo", horaParameter, idDocenteParameter, idPeriodoParameter, minutosParameter, segundosParameter);
        }
    
        public virtual int procAgregarTipoAsistencia(Nullable<int> idTipo, string detalle)
        {
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarTipoAsistencia", idTipoParameter, detalleParameter);
        }
    
        public virtual int procAgregarTipoJustificacion(Nullable<int> idTipoJustificacion, string detalle)
        {
            var idTipoJustificacionParameter = idTipoJustificacion.HasValue ?
                new ObjectParameter("idTipoJustificacion", idTipoJustificacion) :
                new ObjectParameter("idTipoJustificacion", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarTipoJustificacion", idTipoJustificacionParameter, detalleParameter);
        }
    
        public virtual int procAgregarTipoUsuario(Nullable<int> idTipo, string detalle)
        {
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarTipoUsuario", idTipoParameter, detalleParameter);
        }
    
        public virtual int procAgregarUsuario(string documento, Nullable<int> idDocente, Nullable<int> idTipo, string anio)
        {
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(string));
    
            var idDocenteParameter = idDocente.HasValue ?
                new ObjectParameter("idDocente", idDocente) :
                new ObjectParameter("idDocente", typeof(int));
    
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var anioParameter = anio != null ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procAgregarUsuario", documentoParameter, idDocenteParameter, idTipoParameter, anioParameter);
        }
    
        public virtual int procCambiarAñoUsuario(string anio, Nullable<int> idDocente)
        {
            var anioParameter = anio != null ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(string));
    
            var idDocenteParameter = idDocente.HasValue ?
                new ObjectParameter("idDocente", idDocente) :
                new ObjectParameter("idDocente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procCambiarAñoUsuario", anioParameter, idDocenteParameter);
        }
    
        public virtual int procCambiarEstadoUsuario(Nullable<bool> estado, Nullable<int> idDocente)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            var idDocenteParameter = idDocente.HasValue ?
                new ObjectParameter("idDocente", idDocente) :
                new ObjectParameter("idDocente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procCambiarEstadoUsuario", estadoParameter, idDocenteParameter);
        }
    
        public virtual ObjectResult<procConsultarAsistencia_Result> procConsultarAsistencia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarAsistencia_Result>("procConsultarAsistencia");
        }
    
        public virtual ObjectResult<procConsultarAsistenciaXidCabeceraANDidEstudiante_Result> procConsultarAsistenciaXidCabeceraANDidEstudiante(Nullable<int> idCabecera, Nullable<int> idEstudiante)
        {
            var idCabeceraParameter = idCabecera.HasValue ?
                new ObjectParameter("idCabecera", idCabecera) :
                new ObjectParameter("idCabecera", typeof(int));
    
            var idEstudianteParameter = idEstudiante.HasValue ?
                new ObjectParameter("idEstudiante", idEstudiante) :
                new ObjectParameter("idEstudiante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarAsistenciaXidCabeceraANDidEstudiante_Result>("procConsultarAsistenciaXidCabeceraANDidEstudiante", idCabeceraParameter, idEstudianteParameter);
        }
    
        public virtual ObjectResult<procConsultarAsistenciaXidCabeceraANDidEstudianteANDFecha_Result> procConsultarAsistenciaXidCabeceraANDidEstudianteANDFecha(Nullable<int> idEstudiante, string fechadInicio, string fechadFinal)
        {
            var idEstudianteParameter = idEstudiante.HasValue ?
                new ObjectParameter("idEstudiante", idEstudiante) :
                new ObjectParameter("idEstudiante", typeof(int));
    
            var fechadInicioParameter = fechadInicio != null ?
                new ObjectParameter("fechadInicio", fechadInicio) :
                new ObjectParameter("fechadInicio", typeof(string));
    
            var fechadFinalParameter = fechadFinal != null ?
                new ObjectParameter("fechadFinal", fechadFinal) :
                new ObjectParameter("fechadFinal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarAsistenciaXidCabeceraANDidEstudianteANDFecha_Result>("procConsultarAsistenciaXidCabeceraANDidEstudianteANDFecha", idEstudianteParameter, fechadInicioParameter, fechadFinalParameter);
        }
    
        public virtual ObjectResult<procConsultarAsistenciaXidCabeceraANDidEstudianteANDFechaALL_Result> procConsultarAsistenciaXidCabeceraANDidEstudianteANDFechaALL(Nullable<int> idEstudiante, string fechadInicio, string fechadFinal)
        {
            var idEstudianteParameter = idEstudiante.HasValue ?
                new ObjectParameter("idEstudiante", idEstudiante) :
                new ObjectParameter("idEstudiante", typeof(int));
    
            var fechadInicioParameter = fechadInicio != null ?
                new ObjectParameter("fechadInicio", fechadInicio) :
                new ObjectParameter("fechadInicio", typeof(string));
    
            var fechadFinalParameter = fechadFinal != null ?
                new ObjectParameter("fechadFinal", fechadFinal) :
                new ObjectParameter("fechadFinal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarAsistenciaXidCabeceraANDidEstudianteANDFechaALL_Result>("procConsultarAsistenciaXidCabeceraANDidEstudianteANDFechaALL", idEstudianteParameter, fechadInicioParameter, fechadFinalParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> procconsultarAsistenciaXIdDistribucionANDIdPeriodoAndIdEstudianteANDDetalleTipo(Nullable<int> idDistribucion, Nullable<int> idPeriodo, Nullable<int> idEstudiante, string detalle)
        {
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var idEstudianteParameter = idEstudiante.HasValue ?
                new ObjectParameter("idEstudiante", idEstudiante) :
                new ObjectParameter("idEstudiante", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("procconsultarAsistenciaXIdDistribucionANDIdPeriodoAndIdEstudianteANDDetalleTipo", idDistribucionParameter, idPeriodoParameter, idEstudianteParameter, detalleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> procconsultarAsistenciaXIdDistribucionANDIdPeriodoAndIdEstudianteANDDetalleTipoXMES(Nullable<int> idDistribucion, Nullable<int> idPeriodo, Nullable<int> idEstudiante, string detalle, Nullable<System.DateTime> fechaCabecera)
        {
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var idEstudianteParameter = idEstudiante.HasValue ?
                new ObjectParameter("idEstudiante", idEstudiante) :
                new ObjectParameter("idEstudiante", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var fechaCabeceraParameter = fechaCabecera.HasValue ?
                new ObjectParameter("fechaCabecera", fechaCabecera) :
                new ObjectParameter("fechaCabecera", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("procconsultarAsistenciaXIdDistribucionANDIdPeriodoAndIdEstudianteANDDetalleTipoXMES", idDistribucionParameter, idPeriodoParameter, idEstudianteParameter, detalleParameter, fechaCabeceraParameter);
        }
    
        public virtual ObjectResult<procConsultarBitocaraIDDistribucion_Result> procConsultarBitocaraIDDistribucion(Nullable<int> idDistribucion, Nullable<int> idPeriodo)
        {
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarBitocaraIDDistribucion_Result>("procConsultarBitocaraIDDistribucion", idDistribucionParameter, idPeriodoParameter);
        }
    
        public virtual ObjectResult<procConsultarBitocaraIDDistribucionFecha_Result> procConsultarBitocaraIDDistribucionFecha(Nullable<int> idDistribucion, Nullable<int> idPeriodo, Nullable<System.DateTime> fecha)
        {
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarBitocaraIDDistribucionFecha_Result>("procConsultarBitocaraIDDistribucionFecha", idDistribucionParameter, idPeriodoParameter, fechaParameter);
        }
    
        public virtual ObjectResult<procconsultarCabecera_Result> procconsultarCabecera()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procconsultarCabecera_Result>("procconsultarCabecera");
        }
    
        public virtual ObjectResult<procConsultarCabeceraAsistencia_Result> procConsultarCabeceraAsistencia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarCabeceraAsistencia_Result>("procConsultarCabeceraAsistencia");
        }
    
        public virtual ObjectResult<procConsultarCabeceraAsistenciaXID_Result> procConsultarCabeceraAsistenciaXID(Nullable<int> idCabeceraAsistencia)
        {
            var idCabeceraAsistenciaParameter = idCabeceraAsistencia.HasValue ?
                new ObjectParameter("idCabeceraAsistencia", idCabeceraAsistencia) :
                new ObjectParameter("idCabeceraAsistencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarCabeceraAsistenciaXID_Result>("procConsultarCabeceraAsistenciaXID", idCabeceraAsistenciaParameter);
        }
    
        public virtual ObjectResult<procConsultarCabeceraAsistenciaXidCabecera_Result> procConsultarCabeceraAsistenciaXidCabecera(Nullable<int> idCabecera)
        {
            var idCabeceraParameter = idCabecera.HasValue ?
                new ObjectParameter("idCabecera", idCabecera) :
                new ObjectParameter("idCabecera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarCabeceraAsistenciaXidCabecera_Result>("procConsultarCabeceraAsistenciaXidCabecera", idCabeceraParameter);
        }
    
        public virtual ObjectResult<procConsultarCabeceraAsistenicaXidCabeceraANDidEstudiante_Result> procConsultarCabeceraAsistenicaXidCabeceraANDidEstudiante(Nullable<int> idCabecera, Nullable<int> idEstudiante)
        {
            var idCabeceraParameter = idCabecera.HasValue ?
                new ObjectParameter("idCabecera", idCabecera) :
                new ObjectParameter("idCabecera", typeof(int));
    
            var idEstudianteParameter = idEstudiante.HasValue ?
                new ObjectParameter("idEstudiante", idEstudiante) :
                new ObjectParameter("idEstudiante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarCabeceraAsistenicaXidCabeceraANDidEstudiante_Result>("procConsultarCabeceraAsistenicaXidCabeceraANDidEstudiante", idCabeceraParameter, idEstudianteParameter);
        }
    
        public virtual ObjectResult<procconsultarCabeceraXID_Result> procconsultarCabeceraXID(Nullable<int> idCabecera)
        {
            var idCabeceraParameter = idCabecera.HasValue ?
                new ObjectParameter("idCabecera", idCabecera) :
                new ObjectParameter("idCabecera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procconsultarCabeceraXID_Result>("procconsultarCabeceraXID", idCabeceraParameter);
        }
    
        public virtual ObjectResult<procconsultarCabeceraXIdDistribucionANDIdPeriodo_Result> procconsultarCabeceraXIdDistribucionANDIdPeriodo(Nullable<int> idDistribucion, Nullable<int> idPeriodo)
        {
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procconsultarCabeceraXIdDistribucionANDIdPeriodo_Result>("procconsultarCabeceraXIdDistribucionANDIdPeriodo", idDistribucionParameter, idPeriodoParameter);
        }
    
        public virtual ObjectResult<procconsultarCabeceraXIdDistribucionANDIdPeriodoANDFecha_Result> procconsultarCabeceraXIdDistribucionANDIdPeriodoANDFecha(Nullable<int> idDistribucion, Nullable<int> idPeriodo, Nullable<System.DateTime> fechaCabecera)
        {
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var fechaCabeceraParameter = fechaCabecera.HasValue ?
                new ObjectParameter("fechaCabecera", fechaCabecera) :
                new ObjectParameter("fechaCabecera", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procconsultarCabeceraXIdDistribucionANDIdPeriodoANDFecha_Result>("procconsultarCabeceraXIdDistribucionANDIdPeriodoANDFecha", idDistribucionParameter, idPeriodoParameter, fechaCabeceraParameter);
        }
    
        public virtual ObjectResult<procConsultarDetalleJustificacion_Result> procConsultarDetalleJustificacion(Nullable<int> idAsistencia)
        {
            var idAsistenciaParameter = idAsistencia.HasValue ?
                new ObjectParameter("idAsistencia", idAsistencia) :
                new ObjectParameter("idAsistencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarDetalleJustificacion_Result>("procConsultarDetalleJustificacion", idAsistenciaParameter);
        }
    
        public virtual ObjectResult<procConsultarFechasdeMatriculas_Result> procConsultarFechasdeMatriculas(Nullable<int> idPeriodo)
        {
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarFechasdeMatriculas_Result>("procConsultarFechasdeMatriculas", idPeriodoParameter);
        }
    
        public virtual ObjectResult<procConsultarHorario_Result> procConsultarHorario(Nullable<int> idPeriodo)
        {
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarHorario_Result>("procConsultarHorario", idPeriodoParameter);
        }
    
        public virtual ObjectResult<procconsultarHorarioXFechaCabecera_Result> procconsultarHorarioXFechaCabecera(Nullable<System.DateTime> fechaCabecera)
        {
            var fechaCabeceraParameter = fechaCabecera.HasValue ?
                new ObjectParameter("fechaCabecera", fechaCabecera) :
                new ObjectParameter("fechaCabecera", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procconsultarHorarioXFechaCabecera_Result>("procconsultarHorarioXFechaCabecera", fechaCabeceraParameter);
        }
    
        public virtual ObjectResult<procConsultarHorarioxID_Result> procConsultarHorarioxID(Nullable<int> idDetalleHorario)
        {
            var idDetalleHorarioParameter = idDetalleHorario.HasValue ?
                new ObjectParameter("idDetalleHorario", idDetalleHorario) :
                new ObjectParameter("idDetalleHorario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarHorarioxID_Result>("procConsultarHorarioxID", idDetalleHorarioParameter);
        }
    
        public virtual ObjectResult<procConsultarHorarioXIDAsitencia_Result> procConsultarHorarioXIDAsitencia(Nullable<int> idAsistencia)
        {
            var idAsistenciaParameter = idAsistencia.HasValue ?
                new ObjectParameter("idAsistencia", idAsistencia) :
                new ObjectParameter("idAsistencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarHorarioXIDAsitencia_Result>("procConsultarHorarioXIDAsitencia", idAsistenciaParameter);
        }
    
        public virtual ObjectResult<procConsultarHorarioxIdDistribucion_Result> procConsultarHorarioxIdDistribucion(Nullable<int> idDistribucion)
        {
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarHorarioxIdDistribucion_Result>("procConsultarHorarioxIdDistribucion", idDistribucionParameter);
        }
    
        public virtual ObjectResult<procConsultarHorarioxIDPeriodoANDidDistribucion_Result> procConsultarHorarioxIDPeriodoANDidDistribucion(Nullable<int> idDistribucion, Nullable<int> idPeriodo)
        {
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarHorarioxIDPeriodoANDidDistribucion_Result>("procConsultarHorarioxIDPeriodoANDidDistribucion", idDistribucionParameter, idPeriodoParameter);
        }
    
        public virtual ObjectResult<procConsultarJustificacion_Result> procConsultarJustificacion(Nullable<int> idJustificacion)
        {
            var idJustificacionParameter = idJustificacion.HasValue ?
                new ObjectParameter("idJustificacion", idJustificacion) :
                new ObjectParameter("idJustificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarJustificacion_Result>("procConsultarJustificacion", idJustificacionParameter);
        }
    
        public virtual ObjectResult<procConsultarObservacionXID_Result> procConsultarObservacionXID(Nullable<int> idObservacion)
        {
            var idObservacionParameter = idObservacion.HasValue ?
                new ObjectParameter("idObservacion", idObservacion) :
                new ObjectParameter("idObservacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarObservacionXID_Result>("procConsultarObservacionXID", idObservacionParameter);
        }
    
        public virtual ObjectResult<procConsultarOpciones_Result> procConsultarOpciones(Nullable<int> idPeriodo)
        {
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarOpciones_Result>("procConsultarOpciones", idPeriodoParameter);
        }
    
        public virtual ObjectResult<procConsultarPermisoXID_Result> procConsultarPermisoXID(Nullable<int> idDistribucion, Nullable<int> idPeriodo)
        {
            var idDistribucionParameter = idDistribucion.HasValue ?
                new ObjectParameter("idDistribucion", idDistribucion) :
                new ObjectParameter("idDistribucion", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarPermisoXID_Result>("procConsultarPermisoXID", idDistribucionParameter, idPeriodoParameter);
        }
    
        public virtual ObjectResult<procConsultarTiempo_Result> procConsultarTiempo(Nullable<int> idDocente)
        {
            var idDocenteParameter = idDocente.HasValue ?
                new ObjectParameter("idDocente", idDocente) :
                new ObjectParameter("idDocente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarTiempo_Result>("procConsultarTiempo", idDocenteParameter);
        }
    
        public virtual ObjectResult<procConsultarTipoAsistencia_Result> procConsultarTipoAsistencia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarTipoAsistencia_Result>("procConsultarTipoAsistencia");
        }
    
        public virtual ObjectResult<procConsultarTipoAsistenciaXID_Result> procConsultarTipoAsistenciaXID(Nullable<int> idTipo)
        {
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarTipoAsistenciaXID_Result>("procConsultarTipoAsistenciaXID", idTipoParameter);
        }
    
        public virtual ObjectResult<procConsultarTipoJustificacion_Result> procConsultarTipoJustificacion(Nullable<int> idTipoJustificacion)
        {
            var idTipoJustificacionParameter = idTipoJustificacion.HasValue ?
                new ObjectParameter("idTipoJustificacion", idTipoJustificacion) :
                new ObjectParameter("idTipoJustificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarTipoJustificacion_Result>("procConsultarTipoJustificacion", idTipoJustificacionParameter);
        }
    
        public virtual ObjectResult<procConsultarTipoUsuario_Result> procConsultarTipoUsuario(Nullable<int> idTipoUsuario)
        {
            var idTipoUsuarioParameter = idTipoUsuario.HasValue ?
                new ObjectParameter("idTipoUsuario", idTipoUsuario) :
                new ObjectParameter("idTipoUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarTipoUsuario_Result>("procConsultarTipoUsuario", idTipoUsuarioParameter);
        }
    
        public virtual ObjectResult<procConsultarUsuario_Result> procConsultarUsuario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarUsuario_Result>("procConsultarUsuario");
        }
    
        public virtual ObjectResult<procConsultarUsuarioDesactivados_Result> procConsultarUsuarioDesactivados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarUsuarioDesactivados_Result>("procConsultarUsuarioDesactivados");
        }
    
        public virtual ObjectResult<procConsultarUsuarioXIDdocente_Result> procConsultarUsuarioXIDdocente(string documento)
        {
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procConsultarUsuarioXIDdocente_Result>("procConsultarUsuarioXIDdocente", documentoParameter);
        }
    
        public virtual int procEliminarEventoCalendario(Nullable<int> idCalendarioAcademico)
        {
            var idCalendarioAcademicoParameter = idCalendarioAcademico.HasValue ?
                new ObjectParameter("idCalendarioAcademico", idCalendarioAcademico) :
                new ObjectParameter("idCalendarioAcademico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procEliminarEventoCalendario", idCalendarioAcademicoParameter);
        }
    
        public virtual int procModicarEventoCalendario(Nullable<int> idCalendarioAcademico, string detalle, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string backgroundColor, string borderColor)
        {
            var idCalendarioAcademicoParameter = idCalendarioAcademico.HasValue ?
                new ObjectParameter("idCalendarioAcademico", idCalendarioAcademico) :
                new ObjectParameter("idCalendarioAcademico", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var backgroundColorParameter = backgroundColor != null ?
                new ObjectParameter("backgroundColor", backgroundColor) :
                new ObjectParameter("backgroundColor", typeof(string));
    
            var borderColorParameter = borderColor != null ?
                new ObjectParameter("borderColor", borderColor) :
                new ObjectParameter("borderColor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procModicarEventoCalendario", idCalendarioAcademicoParameter, detalleParameter, fechaInicioParameter, fechaFinParameter, backgroundColorParameter, borderColorParameter);
        }
    
        public virtual int procModificarAsistencia(Nullable<int> idAsistencia, Nullable<int> idTipo, string observacion)
        {
            var idAsistenciaParameter = idAsistencia.HasValue ?
                new ObjectParameter("idAsistencia", idAsistencia) :
                new ObjectParameter("idAsistencia", typeof(int));
    
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procModificarAsistencia", idAsistenciaParameter, idTipoParameter, observacionParameter);
        }
    
        public virtual int procModificarDetalleJustificacion(Nullable<int> idDetalleJustificacion, Nullable<int> idAsistencia, Nullable<int> idJustificacion)
        {
            var idDetalleJustificacionParameter = idDetalleJustificacion.HasValue ?
                new ObjectParameter("idDetalleJustificacion", idDetalleJustificacion) :
                new ObjectParameter("idDetalleJustificacion", typeof(int));
    
            var idAsistenciaParameter = idAsistencia.HasValue ?
                new ObjectParameter("idAsistencia", idAsistencia) :
                new ObjectParameter("idAsistencia", typeof(int));
    
            var idJustificacionParameter = idJustificacion.HasValue ?
                new ObjectParameter("idJustificacion", idJustificacion) :
                new ObjectParameter("idJustificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procModificarDetalleJustificacion", idDetalleJustificacionParameter, idAsistenciaParameter, idJustificacionParameter);
        }
    
        public virtual int procModificarHorario(Nullable<int> idDetalleHorario, string detalle, string horaEntrada, string horaSalida)
        {
            var idDetalleHorarioParameter = idDetalleHorario.HasValue ?
                new ObjectParameter("idDetalleHorario", idDetalleHorario) :
                new ObjectParameter("idDetalleHorario", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            var horaEntradaParameter = horaEntrada != null ?
                new ObjectParameter("horaEntrada", horaEntrada) :
                new ObjectParameter("horaEntrada", typeof(string));
    
            var horaSalidaParameter = horaSalida != null ?
                new ObjectParameter("horaSalida", horaSalida) :
                new ObjectParameter("horaSalida", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procModificarHorario", idDetalleHorarioParameter, detalleParameter, horaEntradaParameter, horaSalidaParameter);
        }
    
        public virtual int procModificarJustificacion(Nullable<int> idJustificacion, Nullable<int> idTipoJustificacion, string observacion, string url)
        {
            var idJustificacionParameter = idJustificacion.HasValue ?
                new ObjectParameter("idJustificacion", idJustificacion) :
                new ObjectParameter("idJustificacion", typeof(int));
    
            var idTipoJustificacionParameter = idTipoJustificacion.HasValue ?
                new ObjectParameter("idTipoJustificacion", idTipoJustificacion) :
                new ObjectParameter("idTipoJustificacion", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procModificarJustificacion", idJustificacionParameter, idTipoJustificacionParameter, observacionParameter, urlParameter);
        }
    
        public virtual int procModificarOpciones(Nullable<int> idOpcion, Nullable<int> idPeriodo, Nullable<int> nroSemanas)
        {
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("idOpcion", idOpcion) :
                new ObjectParameter("idOpcion", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var nroSemanasParameter = nroSemanas.HasValue ?
                new ObjectParameter("nroSemanas", nroSemanas) :
                new ObjectParameter("nroSemanas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procModificarOpciones", idOpcionParameter, idPeriodoParameter, nroSemanasParameter);
        }
    
        public virtual int procModificarPermiso(Nullable<int> idPermiso, Nullable<bool> estado)
        {
            var idPermisoParameter = idPermiso.HasValue ?
                new ObjectParameter("idPermiso", idPermiso) :
                new ObjectParameter("idPermiso", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procModificarPermiso", idPermisoParameter, estadoParameter);
        }
    
        public virtual int procModificarTiempo(Nullable<int> idDocente, Nullable<int> hora, Nullable<int> minutos, Nullable<int> segundos, Nullable<int> idPeriodo)
        {
            var idDocenteParameter = idDocente.HasValue ?
                new ObjectParameter("idDocente", idDocente) :
                new ObjectParameter("idDocente", typeof(int));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(int));
    
            var minutosParameter = minutos.HasValue ?
                new ObjectParameter("minutos", minutos) :
                new ObjectParameter("minutos", typeof(int));
    
            var segundosParameter = segundos.HasValue ?
                new ObjectParameter("segundos", segundos) :
                new ObjectParameter("segundos", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procModificarTiempo", idDocenteParameter, horaParameter, minutosParameter, segundosParameter, idPeriodoParameter);
        }
    
        public virtual int procModificarTipoAsistencia(Nullable<int> idTipo, string detalle)
        {
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procModificarTipoAsistencia", idTipoParameter, detalleParameter);
        }
    
        public virtual int procModificarTipoJustificacion(Nullable<int> idTipo, string detalle)
        {
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("detalle", detalle) :
                new ObjectParameter("detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procModificarTipoJustificacion", idTipoParameter, detalleParameter);
        }
    
        public virtual ObjectResult<procObtenerCalendarioAcademico_Result> procObtenerCalendarioAcademico(Nullable<int> idPeriodo)
        {
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procObtenerCalendarioAcademico_Result>("procObtenerCalendarioAcademico", idPeriodoParameter);
        }
    
        public virtual ObjectResult<procObtenerCalendarioAcademicoInicioANDFinDeClasesXIdPeriodo_Result> procObtenerCalendarioAcademicoInicioANDFinDeClasesXIdPeriodo(Nullable<int> idPeriodo, string backGroundColor)
        {
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var backGroundColorParameter = backGroundColor != null ?
                new ObjectParameter("backGroundColor", backGroundColor) :
                new ObjectParameter("backGroundColor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procObtenerCalendarioAcademicoInicioANDFinDeClasesXIdPeriodo_Result>("procObtenerCalendarioAcademicoInicioANDFinDeClasesXIdPeriodo", idPeriodoParameter, backGroundColorParameter);
        }
    
        public virtual int procProtegerCabecera(Nullable<bool> protegida, Nullable<int> idCabecera)
        {
            var protegidaParameter = protegida.HasValue ?
                new ObjectParameter("protegida", protegida) :
                new ObjectParameter("protegida", typeof(bool));
    
            var idCabeceraParameter = idCabecera.HasValue ?
                new ObjectParameter("idCabecera", idCabecera) :
                new ObjectParameter("idCabecera", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procProtegerCabecera", protegidaParameter, idCabeceraParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
